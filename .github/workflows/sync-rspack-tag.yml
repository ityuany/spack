name: Sync Rspack Tag
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Rspack tag to sync (e.g., v1.4.0)'
        required: true
        type: string

jobs:
  sync-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Download and extract tag
        run: |
          TAG="${{ github.event.inputs.tag }}"
          echo "🔄 Downloading rspack tag: $TAG"
          
          # 下载指定tag的代码
          DOWNLOAD_URL="https://github.com/web-infra-dev/rspack/archive/refs/tags/$TAG.tar.gz"
          echo "Download URL: $DOWNLOAD_URL"
          
          if wget -O rspack-tag.tar.gz "$DOWNLOAD_URL"; then
            echo "✅ Downloaded successfully"
          else
            echo "❌ Failed to download tag $TAG"
            echo "请检查tag是否存在: https://github.com/web-infra-dev/rspack/tags"
            exit 1
          fi
          
          # 验证文件存在且不为空
          if [ ! -f rspack-tag.tar.gz ] || [ ! -s rspack-tag.tar.gz ]; then
            echo "❌ Downloaded file is missing or empty"
            exit 1
          fi
          
          # 创建临时目录并解压
          mkdir -p temp-rspack
          
          echo "📦 Extracting archive..."
          if tar -xzf rspack-tag.tar.gz -C temp-rspack --strip-components=1; then
            echo "✅ Extracted successfully"
          else
            echo "❌ Failed to extract archive"
            exit 1
          fi
          
          # 验证解压结果
          if [ ! "$(ls -A temp-rspack)" ]; then
            echo "❌ Extracted directory is empty"
            exit 1
          fi
          
          echo "📋 Extracted files:"
          ls -la temp-rspack/ | head -10
          
          echo "✅ Successfully downloaded and extracted $TAG"
      
      - name: Create sync branch
        run: |
          TAG="${{ github.event.inputs.tag }}"
          SYNC_BRANCH="sync-rspack-$TAG-$(date +%Y%m%d-%H%M%S)"
          echo "SYNC_BRANCH=$SYNC_BRANCH" >> $GITHUB_ENV
          
          git checkout -b "$SYNC_BRANCH"
          echo "✅ Created sync branch: $SYNC_BRANCH"
      
      - name: Backup current state
        run: |
          echo "💾 Backing up current state..."
          
          # 备份.git目录和工作流文件
          cp -r .git /tmp/git-backup
          
          # 确保.github目录存在再备份
          if [ -d .github ]; then
            cp -r .github /tmp/github-backup
          else
            mkdir -p /tmp/github-backup
          fi
          
          echo "✅ Backup completed"
      
      - name: Sync content
        run: |
          TAG="${{ github.event.inputs.tag }}"
          echo "🔄 Syncing content to $TAG..."
          
          # 验证temp-rspack目录存在且有内容
          if [ ! -d temp-rspack ] || [ ! "$(ls -A temp-rspack)" ]; then
            echo "❌ temp-rspack directory is missing or empty"
            exit 1
          fi
          
          # 清空当前内容（除了.git）
          echo "🗑️ Clearing current content..."
          find . -maxdepth 1 ! -name '.git' ! -name '.' ! -name '..' -exec rm -rf {} + 2>/dev/null || true
          
          # 复制新内容
          echo "📋 Copying new content..."
          cp -r temp-rspack/* . 2>/dev/null || echo "Warning: No regular files to copy"
          cp -r temp-rspack/.[^.]* . 2>/dev/null || echo "Warning: No hidden files to copy"
          
          # 恢复工作流文件（保留同步能力）
          echo "🔧 Restoring workflow files..."
          mkdir -p .github/workflows
          
          if [ -f /tmp/github-backup/workflows/sync-rspack-tag.yml ]; then
            cp /tmp/github-backup/workflows/sync-rspack-tag.yml .github/workflows/
            echo "✅ Workflow file restored"
          else
            echo "⚠️ Original workflow file not found, creating new one"
          fi
          
          # 清理临时文件
          rm -rf temp-rspack rspack-tag.tar.gz
          
          echo "✅ Content synced to $TAG"
      
      - name: Commit changes
        run: |
          TAG="${{ github.event.inputs.tag }}"
          
          # 添加所有变更
          git add .
          
          # 检查是否有变更
          if git diff --staged --quiet; then
            echo "📋 No changes detected, repository is already at $TAG"
            echo "NO_CHANGES=true" >> $GITHUB_ENV
          else
            # 提交变更
            COMMIT_MSG="🔄 Sync to rspack $TAG"$'\n\n'"Synced from: https://github.com/web-infra-dev/rspack/tree/$TAG"$'\n'"Sync date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')"$'\n\n'"This commit updates the repository to match rspack $TAG exactly."
            
            git commit -m "$COMMIT_MSG"
            
            echo "✅ Changes committed"
            echo "NO_CHANGES=false" >> $GITHUB_ENV
          fi
      
      - name: Push sync branch
        if: env.NO_CHANGES == 'false'
        run: |
          git push origin "$SYNC_BRANCH"
          echo "✅ Sync branch pushed"
      
      - name: Switch back to main branch
        if: env.NO_CHANGES == 'false'
        run: |
          # 获取默认分支名
          DEFAULT_BRANCH=$(git symbolic-ref refs/remotes/origin/HEAD | sed 's@^refs/remotes/origin/@@')
          echo "Default branch: $DEFAULT_BRANCH"
          
          # 切换回默认分支
          git checkout "$DEFAULT_BRANCH"
          echo "✅ Switched back to $DEFAULT_BRANCH"
      
      - name: Create Pull Request
        if: env.NO_CHANGES == 'false'
        run: |
          TAG="${{ github.event.inputs.tag }}"
          
          # 创建PR描述
          PR_BODY="## 🚀 Rspack Tag Sync

          This PR syncs the repository to **rspack \`$TAG\`**.

          ### 📋 Details
          - **Source**: [web-infra-dev/rspack](https://github.com/web-infra-dev/rspack)
          - **Tag**: \`$TAG\`
          - **Sync Date**: ${{ github.run_id }} (Run ID)

          ### 🔗 Links
          - [Tag on GitHub](https://github.com/web-infra-dev/rspack/tree/$TAG)
          - [Release Notes](https://github.com/web-infra-dev/rspack/releases/tag/$TAG)

          ### ⚠️ Review Notes
          - This is a complete sync to match the upstream tag
          - Please review changes before merging
          - The sync workflow is preserved in \`.github/workflows/\`

          ---
          *🤖 Auto-generated by GitHub Actions*"
          
          # 使用GitHub CLI创建PR
          gh pr create \
            --title "🔄 Sync to rspack $TAG" \
            --body "$PR_BODY" \
            --head "$SYNC_BRANCH" \
            --label "rspack-sync,$TAG,automated"
          
          echo "✅ Pull Request created successfully"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Summary
        run: |
          TAG="${{ github.event.inputs.tag }}"
          
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Target**: [rspack $TAG](https://github.com/web-infra-dev/rspack/tree/$TAG)" >> $GITHUB_STEP_SUMMARY
          echo "- **Sync Branch**: \`$SYNC_BRANCH\`" >> $GITHUB_STEP_SUMMARY
          
          if [ "$NO_CHANGES" = "true" ]; then
            echo "- **Status**: ✅ No changes needed" >> $GITHUB_STEP_SUMMARY
            echo "- **Result**: Repository already matches $TAG" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ✅ Sync completed" >> $GITHUB_STEP_SUMMARY
            echo "- **Result**: PR created for review" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Rspack Releases](https://github.com/web-infra-dev/rspack/releases)" >> $GITHUB_STEP_SUMMARY
          echo "- [Rspack Documentation](https://rspack.rs/)" >> $GITHUB_STEP_SUMMARY 